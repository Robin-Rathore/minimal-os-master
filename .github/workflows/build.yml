name: Build MinimalOS

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential nasm gcc make xorriso dosfstools mtools

      - name: Install i686-elf toolchain
        run: |
          wget https://github.com/lordmilko/i686-elf-tools/releases/download/7.1.0/i686-elf-tools-linux.zip
          unzip i686-elf-tools-linux.zip

          # Add to PATH
          echo "$PWD/i686-elf-tools-linux/bin" >> $GITHUB_PATH

          # Create symbolic links for i386-elf tools
          mkdir -p $HOME/bin
          ln -s $PWD/i686-elf-tools-linux/bin/i686-elf-gcc $HOME/bin/i386-elf-gcc
          ln -s $PWD/i686-elf-tools-linux/bin/i686-elf-ld $HOME/bin/i386-elf-ld
          echo "$HOME/bin" >> $GITHUB_PATH

      - name: Modify Makefiles
        run: |
          # Find and replace i386-elf- with i686-elf- in all Makefiles
          find . -name "Makefile" -o -name "makefile" | xargs sed -i 's/i386-elf-/i686-elf-/g' || true

      - name: Build MinimalOS
        run: |
          make || true

          # Create USB image
          dd if=/dev/zero of=minimalos.img bs=1M count=10
          mkfs.fat -F12 minimalos.img

          # If os-image.bin exists, write it to the image
          if [ -f os-image.bin ]; then
            dd if=os-image.bin of=minimalos.img conv=notrunc
          elif [ -f boot_sect.bin ]; then
            # Fallback to just writing the boot sector
            dd if=boot_sect.bin of=minimalos.img conv=notrunc bs=512 count=1
          fi

      - name: Upload OS image
        uses: actions/upload-artifact@v2
        with:
          name: minimalos-image
          path: minimalos.img
